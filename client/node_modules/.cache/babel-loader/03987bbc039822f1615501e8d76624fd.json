{"ast":null,"code":"var _jsxFileName = \"/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/25-Project-3/resume_finder/izzy-resume-finder-react/client/src/components/pages/Main/pages/PostJob/PostJob.js\";\nimport React from 'react';\nimport { Form, FormGroup, Label, Input, Modal, ModalBody, FormFeedback, ModalHeader, ModalFooter } from 'reactstrap';\nimport Spinner from '../../../../Spinner/Spinner';\nimport './PostJob.css';\nimport Address from \"../Home/components/Address\";\nimport axios from 'axios';\nexport default class PostJob extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      category: '',\n      description: '',\n      address: '',\n      //this is just a string in purpose of viewing it on the page \n      address1: '',\n      address2: '',\n      state: '',\n      city: '',\n      zip: '',\n      addressFlag: 0,\n      spinner: false,\n      success: false\n    };\n\n    this.componentDidMount = () => {\n      let address = '';\n\n      if (!this.props.mainState.address1 || !this.props.mainState.state || !this.props.mainState.city || !this.props.mainState.zip) {\n        address = \"\";\n      } else {\n        if (this.props.mainState.address2) {\n          address = this.props.mainState.address1 + \" \" + this.props.mainState.address2 + \" \" + this.props.mainState.state + \" \" + this.props.mainState.city + \" \" + this.props.mainState.zip;\n        } else {\n          address = this.props.mainState.address1 + \" \" + this.props.mainState.state + \" \" + this.props.mainState.city + \" \" + this.props.mainState.zip;\n        }\n\n        this.setState({\n          address: address,\n          address1: this.props.mainState.address1,\n          address2: this.props.mainState.address2,\n          state: this.props.mainState.state,\n          city: this.props.mainState.city,\n          zip: this.props.mainState.zip\n        });\n      }\n    };\n\n    this.handler = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.editAddress = event => {\n      event.preventDefault();\n      this.setState({\n        addressFlag: 0\n      });\n      let address = '';\n\n      if (this.state.address2) {\n        address = this.state.address1 + \" \" + this.state.address2 + \" \" + this.state.state + \" \" + this.state.city + \" \" + this.state.zip;\n      } else {\n        address = this.state.address1 + \" \" + this.state.state + \" \" + this.state.city + \" \" + this.state.zip;\n      }\n\n      this.setState({\n        address: address,\n        address1: this.state.address1,\n        address2: this.state.address2,\n        state: this.state.state,\n        city: this.state.city,\n        zip: this.state.zip\n      });\n    };\n\n    this.viewAddress = e => {\n      e.preventDefault();\n      this.setState({\n        addressFlag: 1\n      });\n    };\n  }\n\n  resetForm() {\n    this.setState({\n      title: '',\n      category: '',\n      description: ''\n    });\n  }\n\n  submit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    const category = this.state.category;\n    const description = this.state.description;\n    const address = this.state.address;\n    const titleInput = document.getElementById('title-input');\n    const categoryInput = document.getElementById('category-input');\n    const descriptionInput = document.getElementById('description-input');\n    const addressInput = document.getElementById('address-input'); //form validation\n\n    if (!title || !category || !description || !address) {\n      if (!title) titleInput.classList.add('is-invalid');else {\n        titleInput.classList.remove('is-invalid');\n        titleInput.classList.add('is-valid');\n      }\n      if (!category) categoryInput.classList.add('is-invalid');else {\n        categoryInput.classList.remove('is-invalid');\n        categoryInput.classList.add('is-valid');\n      }\n      if (!description) descriptionInput.classList.add('is-invalid');else {\n        descriptionInput.classList.remove('is-invalid');\n        descriptionInput.classList.add('is-valid');\n      }\n      if (!address) addressInput.classList.add('is-invalid');else {\n        addressInput.classList.remove('is-invalid');\n        addressInput.classList.add('is-valid');\n      }\n    } else {\n      //request\n      this.toggle1();\n      axios.post('/api/jobs', {\n        owner: this.props.mainState.id,\n        title: this.state.title,\n        description: this.state.description,\n        category: this.state.category,\n        address: {\n          address1: this.state.address1,\n          address2: this.state.address2,\n          city: this.state.city,\n          state: this.state.state,\n          zip: this.state.zip\n        } //now you can take address1,address2,state,city,zip from his.state\n\n      }).then(res => {\n        this.toggle1();\n        this.toggle2();\n        this.resetForm();\n        console.log(res);\n      }).catch(err => {\n        console.error(err);\n        this.toggle1();\n      });\n    }\n  }\n\n  toggle1() {\n    this.setState({\n      spinner: !this.state.spinner\n    });\n  }\n\n  toggle2() {\n    this.setState({\n      success: !this.state.success\n    });\n  }\n\n  redirect() {\n    window.location = window.location.origin + '/main/home';\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-7 border rounded py-3 my-3 mx-2 bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Post a Job\"), React.createElement(Form, {\n      id: \"post-job-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"title-input\",\n      placeholder: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(FormFeedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Plase add a title.\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"category-input\",\n      placeholder: \"category\",\n      name: \"category\",\n      value: this.state.category,\n      onChange: this.handler.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(FormFeedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Plase add a Category.\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"address-input\",\n      placeholder: \"address\",\n      name: \"address\",\n      value: this.state.address,\n      readonly: \"readonly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"#results\",\n      onClick: this.viewAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Add or Edit Address\"), React.createElement(FormFeedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Plase add an address.\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"textarea\",\n      id: \"description-input\",\n      placeholder: \"description\",\n      rows: \"5\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handler.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(FormFeedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Plase add a Description.\")), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.submit.bind(this),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      className: \"col-md-4  py-3 my-3 mx-2 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.addressFlag ? React.createElement(Address, {\n      address1: this.state.address1,\n      address2: this.state.address2,\n      city: this.state.city,\n      state: this.state.state,\n      zip: this.state.zip,\n      onChange: this.handler,\n      onClick: this.editAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }) : null)), React.createElement(Spinner, {\n      isOpen: this.state.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      isOpen: this.state.success,\n      zIndex: \"10000\",\n      className: \"pr-0\",\n      centered: true,\n      onEnter: this.addStyling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Success!!\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Job created!\"), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-block btn-primary\",\n      onClick: this.toggle2.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Create Another Job\"), React.createElement(\"button\", {\n      className: \"btn btn-block btn-primary mt-3\",\n      onClick: this.redirect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Home\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/25-Project-3/resume_finder/izzy-resume-finder-react/client/src/components/pages/Main/pages/PostJob/PostJob.js"],"names":["React","Form","FormGroup","Label","Input","Modal","ModalBody","FormFeedback","ModalHeader","ModalFooter","Spinner","Address","axios","PostJob","Component","state","title","category","description","address","address1","address2","city","zip","addressFlag","spinner","success","componentDidMount","props","mainState","setState","handler","event","target","name","value","editAddress","preventDefault","viewAddress","e","resetForm","submit","titleInput","document","getElementById","categoryInput","descriptionInput","addressInput","classList","add","remove","toggle1","post","owner","id","then","res","toggle2","console","log","catch","err","error","redirect","window","location","origin","render","bind","addStyling"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormGroup, Label, Input, Modal, ModalBody, FormFeedback, ModalHeader, ModalFooter } from 'reactstrap';\nimport Spinner from '../../../../Spinner/Spinner';\nimport './PostJob.css';\nimport Address from \"../Home/components/Address\";\nimport axios from 'axios';\n\nexport default class PostJob extends React.Component {\n  state = {\n    title: '',\n    category: '',\n    description: '',\n    address: '', //this is just a string in purpose of viewing it on the page \n    address1: '',\n    address2: '',\n    state: '',\n    city: '',\n    zip: '',\n    addressFlag: 0,\n    spinner: false,\n    success: false\n  }\n\n  componentDidMount = () => {\n    let address = '';\n    if ((!this.props.mainState.address1) || (!this.props.mainState.state) || (!this.props.mainState.city) || (!this.props.mainState.zip)) {\n      address = \"\";\n    }\n    else\n     {\n      if (this.props.mainState.address2) {\n        address = this.props.mainState.address1 + \" \" + this.props.mainState.address2 + \" \" + this.props.mainState.state + \" \" + this.props.mainState.city + \" \" + this.props.mainState.zip\n      }\n      else {\n        address = this.props.mainState.address1 + \" \" + this.props.mainState.state + \" \" + this.props.mainState.city + \" \" + this.props.mainState.zip\n      }\n      this.setState({ address: address, address1: this.props.mainState.address1, address2: this.props.mainState.address2, state: this.props.mainState.state, city: this.props.mainState.city, zip: this.props.mainState.zip })\n    }\n   \n  }\n\n  handler = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  resetForm() {\n    this.setState({\n      title: '',\n      category: '',\n      description: ''\n    })\n  }\n\n  editAddress = (event) => {\n    event.preventDefault();\n    this.setState({ addressFlag: 0 })\n    let address = '';\n    if (this.state.address2) {\n      address = this.state.address1 + \" \" + this.state.address2 + \" \" + this.state.state + \" \" + this.state.city + \" \" + this.state.zip\n    }\n    else {\n      address = this.state.address1 + \" \" + this.state.state + \" \" + this.state.city + \" \" + this.state.zip\n    }\n    this.setState({ address: address, address1: this.state.address1, address2: this.state.address2, state: this.state.state, city: this.state.city, zip: this.state.zip })\n  }\n\n\n  viewAddress = (e) => {\n    e.preventDefault();\n    this.setState({ addressFlag: 1 })\n  }\n\n\n  submit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    const category = this.state.category;\n    const description = this.state.description;\n    const address = this.state.address;\n    const titleInput = document.getElementById('title-input');\n    const categoryInput = document.getElementById('category-input');\n    const descriptionInput = document.getElementById('description-input');\n    const addressInput = document.getElementById('address-input');\n\n    //form validation\n    if (!title || !category || !description || !address) {\n      if (!title) titleInput.classList.add('is-invalid');\n      else {\n        titleInput.classList.remove('is-invalid');\n        titleInput.classList.add('is-valid');\n      }\n      if (!category) categoryInput.classList.add('is-invalid');\n      else {\n        categoryInput.classList.remove('is-invalid');\n        categoryInput.classList.add('is-valid');\n      }\n      if (!description) descriptionInput.classList.add('is-invalid');\n      else {\n        descriptionInput.classList.remove('is-invalid');\n        descriptionInput.classList.add('is-valid');\n      }\n      if (!address) addressInput.classList.add('is-invalid');\n      else {\n        addressInput.classList.remove('is-invalid');\n        addressInput.classList.add('is-valid');\n      }\n    } else {\n\n      //request\n      this.toggle1();\n      axios.post('/api/jobs', {\n        owner: this.props.mainState.id,\n        title: this.state.title,\n        description: this.state.description,\n        category: this.state.category,\n        address: {\n          address1: this.state.address1,\n          address2: this.state.address2,\n          city: this.state.city,\n          state: this.state.state,\n          zip: this.state.zip\n        } //now you can take address1,address2,state,city,zip from his.state\n      })\n        .then(res => {\n          this.toggle1();\n          this.toggle2();\n          this.resetForm();\n          console.log(res);\n        })\n        .catch(err => {\n          console.error(err);\n          this.toggle1();\n        })\n    }\n  }\n\n  toggle1() {\n    this.setState({\n      spinner: !this.state.spinner\n    });\n  }\n\n  toggle2() {\n    this.setState({\n      success: !this.state.success\n    });\n  }\n\n  redirect() {\n    window.location = window.location.origin + '/main/home'\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-7 border rounded py-3 my-3 mx-2 bg-light\">\n            <h4 className=\"text-center\">Post a Job</h4>\n            <Form id=\"post-job-form\">\n              <FormGroup>\n                <Label>Title</Label>\n                <Input type=\"text\" id=\"title-input\" placeholder=\"title\" name=\"title\" value={this.state.title} onChange={this.handler.bind(this)} />\n                <FormFeedback>Plase add a title.</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Category</Label>\n                <Input type=\"text\" id=\"category-input\" placeholder=\"category\" name=\"category\" value={this.state.category} onChange={this.handler.bind(this)} />\n                <FormFeedback>Plase add a Category.</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Address</Label>\n                <Input type=\"text\" id=\"address-input\" placeholder=\"address\" name=\"address\" value={this.state.address} readonly=\"readonly\" />\n                <a href=\"#results\" onClick={this.viewAddress}>Add or Edit Address</a>\n                <FormFeedback>Plase add an address.</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Description</Label>\n                <Input type=\"textarea\" id=\"description-input\" placeholder=\"description\" rows=\"5\" name=\"description\" value={this.state.description} onChange={this.handler.bind(this)} required />\n                <FormFeedback>Plase add a Description.</FormFeedback>\n              </FormGroup>\n              <button className=\"btn btn-primary\" onClick={this.submit.bind(this)} type=\"submit\">Submit</button>\n            </Form>\n          </div>\n          <div className=\"col-md-4  py-3 my-3 mx-2 \">\n            {this.state.addressFlag ?\n              <Address\n                address1={this.state.address1}\n                address2={this.state.address2}\n                city={this.state.city}\n                state={this.state.state}\n                zip={this.state.zip}\n                onChange={this.handler}\n                onClick={this.editAddress}\n              /> : null}\n          </div>\n        </div>\n\n        <Spinner isOpen={this.state.spinner} />\n        <Modal isOpen={this.state.success} zIndex=\"10000\" className=\"pr-0\" centered onEnter={this.addStyling}>\n          <ModalHeader>\n            Success!!\n          </ModalHeader>\n          <ModalBody>\n            Job created!\n          </ModalBody>\n          <ModalFooter>\n            <div className=\"w-100\">\n              <button className=\"btn btn-block btn-primary\" onClick={this.toggle2.bind(this)}>Create Another Job</button>\n              <button className=\"btn btn-block btn-primary mt-3\" onClick={this.redirect.bind(this)}>Home</button>\n            </div>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}