{"ast":null,"code":"import _defineProperty from\"/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/izzy-resume-finder-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/izzy-resume-finder-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/izzy-resume-finder-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import decode from'jwt-decode';import API from\"../utils/API\";var AuthService=/*#__PURE__*/function(){// Initializing important variables\nfunction AuthService(){_classCallCheck(this,AuthService);this.login=this.login.bind(this);this.getProfile=this.getProfile.bind(this);}_createClass(AuthService,[{key:\"login\",value:function login(email1,password1){var _this=this;alert(email1);var headers={'Accept':'application/json','Content-Type':'application/json'};var user={email:email1,password:password1};return API.findUser(user).then(function(res){_this.setToken(res.data.token);// Setting the token in localStorage\nheaders['Authorization']='Bearer '+_this.getToken();}).catch(function(err){return console.log(err);});}},{key:\"loggedIn\",value:function loggedIn(){// Checks if there is a saved token and it's still valid\nvar token=this.getToken();// GEtting token from localstorage\nreturn!!token&&!this.isTokenExpired(token);// handwaiving here\n}},{key:\"isTokenExpired\",value:function isTokenExpired(token){try{var decoded=decode(token);if(decoded.exp<Date.now()/1000){// Checking if token is expired. N\nreturn true;}else return false;}catch(err){return false;}}},{key:\"setToken\",value:function setToken(idToken){// Saves user token to localStorage\nlocalStorage.setItem('id_token',idToken);}},{key:\"getToken\",value:function getToken(){// Retrieves the user token from localStorage\nreturn localStorage.getItem('id_token');}},{key:\"logout\",value:function logout(){// Clear user token and profile data from localStorage\nlocalStorage.removeItem('id_token');}},{key:\"getProfile\",value:function getProfile(){// Using jwt-decode npm package to decode the token\nreturn decode(this.getToken());}},{key:\"fetch\",value:function(_fetch){function fetch(_x,_x2){return _fetch.apply(this,arguments);}fetch.toString=function(){return _fetch.toString();};return fetch;}(function(url,options){// performs api calls sending the required authentication headers\nvar headers={'Accept':'application/json','Content-Type':'application/json'};// Setting Authorization header\n// Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\nif(this.loggedIn()){headers['Authorization']='Bearer '+this.getToken();}return fetch(url,_objectSpread({headers:headers},options)).then(this._checkStatus).then(function(response){return response.json();});})},{key:\"_checkStatus\",value:function _checkStatus(response){// raises an error in case response status is not a success\nif(response.status>=200&&response.status<300){// Success status lies between 200 to 300\nreturn response;}else{var error=new Error(response.statusText);error.response=response;throw error;}}}]);return AuthService;}();export{AuthService as default};","map":{"version":3,"sources":["/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/izzy-resume-finder-react/client/src/components/AuthService.js"],"names":["decode","API","AuthService","login","bind","getProfile","email1","password1","alert","headers","user","email","password","findUser","then","res","setToken","data","token","getToken","catch","err","console","log","isTokenExpired","decoded","exp","Date","now","idToken","localStorage","setItem","getItem","removeItem","url","options","loggedIn","fetch","_checkStatus","response","json","status","error","Error","statusText"],"mappings":"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","sourcesContent":["import decode from 'jwt-decode';\nimport API from \"../utils/API\"\n\nexport default class AuthService {\n    // Initializing important variables\n    constructor() {\n        this.login = this.login.bind(this)\n        this.getProfile = this.getProfile.bind(this)\n\n    }\n\n    login(email1, password1) {\n        alert(email1)\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        let user = { email: email1, password: password1 }\n        return API.findUser(user)\n            .then(res => {\n                this.setToken(res.data.token) // Setting the token in localStorage\n                 headers['Authorization'] = 'Bearer ' + this.getToken()\n               \n\n            })\n            .catch(err => console.log(err));\n\n\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // GEtting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getProfile() {\n        // Using jwt-decode npm package to decode the token\n        return decode(this.getToken());\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}