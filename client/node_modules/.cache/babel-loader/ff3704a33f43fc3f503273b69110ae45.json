{"ast":null,"code":"var _jsxFileName = \"/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/25-Project-3/resume_finder/client/src/components/pages/Main/pages/SearchJobs/SearchJobs.js\";\nimport React, { Fragment } from 'react';\nimport './SearchJobs.css';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport axios from 'axios';\nimport Map from './components/Map';\nimport Spinner from '../../../../Spinner/Spinner';\nimport API from '../../../../../utils/API';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap'; //import bootbox from \"../../../../../bootbox.min\";\n\nclass SearchJobs extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      zipcode: '',\n      jobs: null,\n      spinner: false,\n      modal: false\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.makeBid = jobId => {\n      const input = document.getElementById(jobId);\n      let priceInput = input.value;\n      let priceNumber = Number(priceInput);\n      let user = this.props.mainState.id;\n      let status = \"pending\";\n      API.saveBid(user, priceNumber, status, jobId).then(res => console.log(res.data)) //need modal here for res.data\n      .catch(err => console.log(err));\n    };\n\n    this.showDescription = des => {\n      console.log(des); //need modal here for des\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.zipcode.length > 5) {\n      this.setState({\n        zipcode: this.state.zipcode.slice(0, -1)\n      });\n    }\n  }\n\n  handler(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  searchJobs(event) {\n    event.preventDefault();\n    this.toggle1();\n    axios.get('/api/jobs/' + this.state.zipcode).then(res => {\n      console.log(res);\n      this.toggle1();\n      this.showJobs(res);\n    }).catch(err => console.error(err));\n  }\n\n  showJobs(res) {\n    this.setState({\n      jobs: res.data\n    });\n  }\n\n  toggle1() {\n    this.setState({\n      spinner: !this.state.spinner\n    });\n  }\n\n  render() {\n    let jobsArray = [];\n\n    if (this.state.jobs) {\n      const myJobs = this.state.jobs;\n      myJobs.forEach(elem => {\n        let address = elem.address.address1 + ', ' + elem.address.city;\n        jobsArray.push(React.createElement(\"tr\", {\n          key: elem._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"align-middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, elem.title), React.createElement(\"td\", {\n          className: \"align-middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, elem.category), React.createElement(\"td\", {\n          className: \"align-middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onClick: () => this.showDescription(elem.description),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-sm btn-secondary\",\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Description\")), React.createElement(Modal, {\n          isOpen: this.state.modal,\n          toggle: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Job Description\"), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, elem.description), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"danger\",\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Close\")))), React.createElement(\"td\", {\n          className: \"align-middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, address), React.createElement(\"td\", {\n          style: {\n            minWidth: '80px',\n            maxWidth: '80px'\n          },\n          className: \"input-group-sm align-middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Input, {\n          className: \"text-center\",\n          placeholder: \"$$$\",\n          id: elem._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          className: \"align-middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onClick: () => this.makeBid(elem._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-sm btn-primary\",\n          onClick: e => {\n            if (window.alert('Successfully Submitted!')) this.makeBid(elem._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Bid\")))));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid text-center filler\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      style: {\n        maxWidth: '400px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"form-input\",\n      id: \"zip-code-input\",\n      placeholder: \"Zip Code\",\n      onChange: this.handler.bind(this),\n      value: this.state.zipcode,\n      name: \"zipcode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-auto pl-0 py-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.searchJobs.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Search\"))))), React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.jobs ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"border mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      hover: true,\n      className: \"bg-light mb-0 border\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, jobsArray)))) : React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"bg-light p-3 border rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"No Results :\", '('))))), React.createElement(Spinner, {\n      isOpen: this.state.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchJobs;","map":{"version":3,"sources":["/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/25-Project-3/resume_finder/client/src/components/pages/Main/pages/SearchJobs/SearchJobs.js"],"names":["React","Fragment","Form","FormGroup","Input","axios","Map","Spinner","API","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","SearchJobs","Component","state","zipcode","jobs","spinner","modal","toggle","setState","makeBid","jobId","input","document","getElementById","priceInput","value","priceNumber","Number","user","props","mainState","id","status","saveBid","then","res","console","log","data","catch","err","showDescription","des","componentDidUpdate","length","slice","handler","event","target","name","searchJobs","preventDefault","toggle1","get","showJobs","error","render","jobsArray","myJobs","forEach","elem","address","address1","city","push","_id","title","category","description","minWidth","maxWidth","e","window","alert","bind"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport './SearchJobs.css';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport axios from 'axios';\nimport Map from './components/Map';\nimport Spinner from '../../../../Spinner/Spinner';\nimport API from '../../../../../utils/API';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap';\n\n\n//import bootbox from \"../../../../../bootbox.min\";\n\nclass SearchJobs extends React.Component {\n\n  state = {\n    zipcode: '',\n    jobs: null,\n    spinner: false,\n    modal: false,\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n\n  componentDidUpdate() {\n    if (this.state.zipcode.length > 5) {\n      this.setState({\n        zipcode: this.state.zipcode.slice(0, -1)\n      })\n    }\n  }\n\n  handler(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  searchJobs(event) {\n    event.preventDefault();\n    this.toggle1();\n    axios.get('/api/jobs/' + this.state.zipcode)\n      .then(res => {\n        console.log(res);\n        this.toggle1();\n        this.showJobs(res);\n      })\n      .catch(err => console.error(err));\n  }\n\n  showJobs(res) {\n    this.setState({\n      jobs: res.data\n    })\n  }\n\n  makeBid = (jobId) => {\n    const input = document.getElementById(jobId);\n    let priceInput = input.value;\n    let priceNumber = Number(priceInput);\n    let user = this.props.mainState.id;\n    let status = \"pending\"\n    API.saveBid(user, priceNumber, status, jobId)\n      .then(res => console.log(res.data))//need modal here for res.data\n      .catch(err => console.log(err))\n  }\n\n  toggle1() {\n    this.setState({\n      spinner: !this.state.spinner\n    });\n  }\n\n  showDescription = (des) => {\n    console.log(des)//need modal here for des\n\n\n  }\n\n  render() {\n    let jobsArray = [];\n    if (this.state.jobs) {\n      const myJobs = this.state.jobs;\n      myJobs.forEach(elem => {\n        let address = elem.address.address1 + ', ' + elem.address.city\n        jobsArray.push(\n          <tr key={elem._id}>\n            <th className=\"align-middle\">\n              {elem.title}\n            </th>\n            <td className=\"align-middle\">\n              {elem.category}\n            </td>\n            <td className=\"align-middle\">\n              {/* <a href =\"#\" onClick={()=>this.showDescription(elem.description)}>Description</a> */}\n              <span onClick={() => this.showDescription(elem.description)}>\n                <button className=\"btn btn-sm btn-secondary\" onClick={this.toggle}>\n                  Description\n              </button>\n              </span>\n              {/* MODAL */}\n              <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>Job Description</ModalHeader>\n                <ModalBody>\n                  {elem.description}\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"danger\" onClick={this.toggle}>Close</Button>\n                </ModalFooter>\n              </Modal>\n            </td>\n            <td className=\"align-middle\">\n              {address}\n            </td>\n            <td style={{ minWidth: '80px', maxWidth: '80px' }} className=\"input-group-sm align-middle\">\n              <Input className=\"text-center\" placeholder=\"$$$\" id={elem._id} />\n            </td>\n            <td className=\"align-middle\">\n              {/* <button className=\"bidButton btn btn-primary text-center\" onClick={() => this.makeBid(elem._id)} > Submit a bid </button> */}\n              <span onClick={() => this.makeBid(elem._id)}>\n                <button className=\"btn btn-sm btn-primary\" onClick={(e) => { if (window.alert('Successfully Submitted!')) this.makeBid(elem._id) }}>\n                  Bid\n              </button>\n              </span>\n            </td>\n          </tr>\n        )\n      })\n    }\n\n    return (\n      <div className=\"container-fluid text-center filler\">\n        <div className=\"row\">\n          <div className=\"col mt-4\">\n            <h1>Search</h1>\n          </div>\n        </div>\n        <Form>\n          <FormGroup>\n            <div className=\"row justify-content-center\">\n              <div className=\"col\" style={{ maxWidth: '400px' }}>\n                <Input className=\"form-input\" id=\"zip-code-input\" placeholder=\"Zip Code\" onChange={this.handler.bind(this)} value={this.state.zipcode} name='zipcode' />\n              </div>\n              <div className=\"col-auto pl-0 py-0\">\n                <button className=\"btn btn-primary\" onClick={this.searchJobs.bind(this)} >Search</button>\n              </div>\n            </div>\n          </FormGroup>\n        </Form>\n        <Map />\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col\">\n            {\n              this.state.jobs ?\n                <Fragment>\n                  <div className=\"border mb-4\">\n                    <Table striped hover className=\"bg-light mb-0 border\" size=\"sm\">\n                      <thead>\n                        <tr>\n                          <th>Title</th>\n                          <th>Category</th>\n                          <th>Description</th>\n                          <th>Address</th>\n                          <th>Price</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {jobsArray}\n                      </tbody>\n                    </Table>\n                  </div>\n                </Fragment>\n                :\n                <div className=\"row d-flex justify-content-center\">\n                  <div className=\"col-auto\">\n                    <h3 className=\"bg-light p-3 border rounded\">No Results :{'('}</h3>\n                  </div>\n                </div>\n            }\n          </div>\n        </div>\n        <Spinner isOpen={this.state.spinner} />\n      </div>\n    )\n  }\n}\n\nexport default SearchJobs;"]},"metadata":{},"sourceType":"module"}