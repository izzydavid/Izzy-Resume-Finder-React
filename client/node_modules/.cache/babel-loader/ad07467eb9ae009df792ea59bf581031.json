{"ast":null,"code":"var _jsxFileName = \"/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/25-Project-3/resume_finder/izzy-resume-finder-react/client/src/components/pages/Main/Main.js\";\nimport React, { Component } from \"react\";\nimport withAuth from '../../withAuth';\nimport AuthService from '../../AuthService';\nimport API from \"../../../utils/API\";\nimport { Route } from 'react-router-dom';\nimport PostJob from './pages/PostJob/PostJob';\nimport SearchJobs from './pages/SearchJobs/SearchJobs';\nimport Home from './pages/Home/Home';\nimport axios from 'axios';\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      skill: \"\",\n      skills: [],\n      email: \"\",\n      phone: \"\",\n      name: \"\",\n      image: null,\n      address1: \"\",\n      address2: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      myJobs: [],\n      myBids: [],\n      history: [],\n      addressFlag: 0\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.getUserInfo = email => {\n      API.getUserInfoFromDB(email).then(res => {\n        const data = res.data;\n        const address = data.address;\n\n        if (data.image) {\n          var b64string = data.image;\n          var buf = Buffer.from(b64string, 'base64');\n        }\n\n        this.setState({\n          skills: data.skills,\n          id: data._id,\n          myJobs: data.myJobs,\n          myBids: data.myBids,\n          address1: address ? address.address1 : null,\n          address2: address ? address.address2 : null,\n          state: address ? address.state : null,\n          city: address ? address.city : null,\n          zip: address ? address.zip : null,\n          image: buf ? buf : null\n        });\n      }).then(() => {\n        this.getBidData();\n      }).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      //call the function to retrive user info \n      this.getUserInfo(this.Auth.getProfile().email); //get user email and name from the token through getProfile function\n\n      this.setState({\n        name: this.Auth.getProfile().name,\n        email: this.Auth.getProfile().email\n      });\n    };\n\n    this.viewAddress = e => {\n      e.preventDefault();\n      this.setState({\n        addressFlag: 1\n      });\n    };\n\n    this.addSkill = () => {\n      let tempSkillArray = this.state.skills;\n      tempSkillArray.push(this.state.skill);\n      API.updateSkills(tempSkillArray, this.state.id).then(res => this.getUserInfo(this.Auth.getProfile().email)) //this.setState({skills:res.data.skills}))//here we retrive the data and set state each with its value \n      .catch(err => console.log(err));\n      this.setState({\n        skill: \"\"\n      });\n    };\n\n    this.saveImage = files => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        const dataURL = reader.result;\n        this.setState({\n          image: dataURL\n        });\n        API.saveImage(dataURL, this.Auth.getProfile().email).then(res => console.log(res)).catch(err => console.log(err));\n      };\n\n      reader.readAsDataURL(files[0]);\n    };\n\n    this.editAddress = event => {\n      event.preventDefault();\n      let data = {\n        address1: this.state.address1,\n        address2: this.state.address2,\n        state: this.state.state,\n        city: this.state.city,\n        zip: this.state.zip,\n        id: this.state.id\n      };\n      this.setState({\n        addressFlag: 0\n      });\n      API.updateAddress(data).then(res => this.getUserInfo(this.Auth.getProfile().email)).catch(err => console.log(err));\n    };\n\n    this.Auth = new AuthService();\n  }\n\n  getBidData() {\n    const jobIds = this.state.myBids;\n    axios.get('/api/bids', {\n      params: {\n        jobIds: jobIds\n      }\n    }).then(res => {\n      const bids = [];\n      res.data.forEach(job => {\n        job.bids.forEach(bid => {\n          if (bid.user === this.state.id) {\n            const bidInfo = {\n              status: bid.status,\n              price: bid.price,\n              address: job.address,\n              title: job.title,\n              category: job.category,\n              description: job.description,\n              ownerId: job.owner\n            };\n            bids.push(bidInfo);\n          }\n        });\n      });\n      this.setState({\n        myBids: bids\n      });\n    }).catch(err => console.log(err));\n  }\n\n  getUserDataById(event) {\n    event.preventDefault();\n    console.log('hello');\n    const id = this.state.id;\n    axios.get(\"/api/userData/\".concat(id)).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  getUserDataPopulate(event) {\n    event.preventDefault();\n    const id = this.state.id;\n    const field = 'myJobs';\n    axios.get(\"/api/userData/populate/\".concat(id, \"/\").concat(field)).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  confirmBid(jobId, userId) {\n    axios.put('/api/bid/confirm', {\n      jobId: jobId,\n      userId: userId\n    }).then(() => {\n      this.getUserInfo(this.Auth.getProfile().email);\n      this.setState({\n        name: this.Auth.getProfile().name,\n        email: this.Auth.getProfile().email\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-column flex-grow-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/main/home\",\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        mainState: this.state,\n        onChange: this.handleInputChange,\n        onClick: this.addSkill,\n        onAddressClick: this.editAddress,\n        onView: this.viewAddress,\n        onDrop: this.saveImage,\n        confirmBid: this.confirmBid.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/main/search-jobs\",\n      render: props => React.createElement(SearchJobs, Object.assign({}, props, {\n        mainState: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/main/post-job\",\n      render: props => React.createElement(PostJob, Object.assign({}, props, {\n        mainState: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withAuth(Main);","map":{"version":3,"sources":["/Users/davidirizarry/Desktop/Macbook/Coding-BootCamp/Coding-BootCamp/25-Project-3/resume_finder/izzy-resume-finder-react/client/src/components/pages/Main/Main.js"],"names":["React","Component","withAuth","AuthService","API","Route","PostJob","SearchJobs","Home","axios","Main","constructor","state","id","skill","skills","email","phone","name","image","address1","address2","city","zip","myJobs","myBids","history","addressFlag","handleInputChange","event","target","value","setState","getUserInfo","getUserInfoFromDB","then","res","data","address","b64string","buf","Buffer","from","_id","getBidData","catch","err","console","log","componentDidMount","Auth","getProfile","viewAddress","e","preventDefault","addSkill","tempSkillArray","push","updateSkills","saveImage","files","reader","FileReader","onload","dataURL","result","readAsDataURL","editAddress","updateAddress","jobIds","get","params","bids","forEach","job","bid","user","bidInfo","status","price","title","category","description","ownerId","owner","getUserDataById","error","getUserDataPopulate","field","confirmBid","jobId","userId","put","render","props","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withAuth from '../../withAuth';\nimport AuthService from '../../AuthService';\nimport API from \"../../../utils/API\";\nimport { Route } from 'react-router-dom';\nimport PostJob from './pages/PostJob/PostJob';\nimport SearchJobs from './pages/SearchJobs/SearchJobs';\nimport Home from './pages/Home/Home';\nimport axios from 'axios';\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.Auth = new AuthService();\n  }\n\n  state = {\n    id: \"\",\n    skill: \"\",\n    skills: [],\n    email: \"\",\n    phone: \"\",\n    name: \"\",\n    image: null,\n    address1: \"\",\n    address2: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    myJobs: [],\n    myBids: [],\n    history: [],\n    addressFlag: 0\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBidData() {\n    const jobIds = this.state.myBids;\n    axios.get('/api/bids', { params: { jobIds: jobIds } })\n      .then(res => {\n        const bids = []\n        res.data.forEach(job => {\n          job.bids.forEach(bid => {\n            if (bid.user === this.state.id) {\n              const bidInfo = {\n                status: bid.status,\n                price: bid.price,\n                address: job.address,\n                title: job.title,\n                category: job.category,\n                description: job.description,\n                ownerId: job.owner\n              }\n              bids.push(bidInfo);\n            }\n          })\n        })\n        this.setState({\n          myBids: bids\n        })\n      })\n      .catch(err => console.log(err));\n  }\n\n  getUserInfo = (email) => {\n    API.getUserInfoFromDB(email)\n      .then(res => {\n        const data = res.data;\n        const address = data.address;\n        if (data.image) {\n          var b64string = data.image;\n          var buf = Buffer.from(b64string, 'base64');\n        }\n        this.setState({\n          skills: data.skills,\n          id: data._id,\n          myJobs: data.myJobs,\n          myBids: data.myBids,\n          address1: address ? address.address1 : null,\n          address2: address ? address.address2 : null,\n          state: address ? address.state : null,\n          city: address ? address.city : null,\n          zip: address ? address.zip : null,\n          image: buf ? buf : null\n        })\n      })\n      .then(() => {\n        this.getBidData()\n      })\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount = () => {\n    //call the function to retrive user info \n    this.getUserInfo(this.Auth.getProfile().email);\n    //get user email and name from the token through getProfile function\n    this.setState({\n      name: this.Auth.getProfile().name,\n      email: this.Auth.getProfile().email\n    });\n  }\n\n  viewAddress = (e) => {\n    e.preventDefault();\n    this.setState({ addressFlag: 1 })\n  }\n\n  addSkill = () => {\n    let tempSkillArray = this.state.skills;\n    tempSkillArray.push(this.state.skill);\n    API.updateSkills(tempSkillArray, this.state.id)\n      .then(res => this.getUserInfo(this.Auth.getProfile().email)) //this.setState({skills:res.data.skills}))//here we retrive the data and set state each with its value \n      .catch(err => console.log(err));\n    this.setState({ skill: \"\" })\n  }\n\n  saveImage = (files) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const dataURL = reader.result;\n      this.setState({ image: dataURL })\n      API.saveImage(dataURL, this.Auth.getProfile().email)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    reader.readAsDataURL(files[0]);\n  }\n\n  editAddress = (event) => {\n    event.preventDefault();\n    let data = {\n      address1: this.state.address1,\n      address2: this.state.address2,\n      state: this.state.state,\n      city: this.state.city,\n      zip: this.state.zip,\n      id: this.state.id\n    }\n    this.setState({ addressFlag: 0 })\n    API.updateAddress(data)\n      .then(res => this.getUserInfo(this.Auth.getProfile().email))\n      .catch(err => console.log(err));\n  }\n\n  getUserDataById(event) {\n    event.preventDefault();\n    console.log('hello');\n    const id = this.state.id;\n    axios.get(`/api/userData/${id}`)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.error(err);\n      })\n  }\n\n  getUserDataPopulate(event) {\n    event.preventDefault();\n    const id = this.state.id;\n    const field = 'myJobs';\n    axios.get(`/api/userData/populate/${id}/${field}`)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.error(err);\n      })\n  }\n\n  confirmBid(jobId, userId) {\n    axios.put('/api/bid/confirm', {\n      jobId: jobId,\n      userId: userId\n    })\n      .then(() => {\n        this.getUserInfo(this.Auth.getProfile().email);\n        this.setState({\n          name: this.Auth.getProfile().name,\n          email: this.Auth.getProfile().email\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column flex-grow-1\">\n        <Route exact path=\"/main/home\" render={(props) => <Home {...props} mainState={this.state} onChange={this.handleInputChange} onClick={this.addSkill} onAddressClick={this.editAddress} onView={this.viewAddress} onDrop={this.saveImage} confirmBid={this.confirmBid.bind(this)} />} />\n        <Route exact path=\"/main/search-jobs\" render={(props) => <SearchJobs {...props} mainState={this.state} />} />\n        <Route exact path=\"/main/post-job\" render={(props) => <PostJob {...props} mainState={this.state} />} />\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Main);\n\n"]},"metadata":{},"sourceType":"module"}